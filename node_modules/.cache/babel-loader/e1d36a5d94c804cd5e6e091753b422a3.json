{"ast":null,"code":"import { geoHammer, geoAitoff, geoMollweide } from \"d3-geo-projection\";\nimport { geoGraticule10 } from \"d3\";\nexport const aitoffProj = geoAitoff();\nexport const hammerProj = geoHammer();\nexport const mollweideProj = geoMollweide();\nexport const graticule = geoGraticule10();\nexport const outline = {\n  type: \"Sphere\"\n};\nexport const getMwbackground = d => {\n  // geoJson object to darken the mw-outside, prevent greying of whole map in some orientations \n  var res = {\n    'type': 'FeatureCollection',\n    'features': [{\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiPolygon',\n        'coordinates': []\n      }\n    }]\n  }; // reverse the polygons, inside -> outside\n\n  var l1 = d.features[0].geometry.coordinates[0];\n  res.features[0].geometry.coordinates[0] = [];\n\n  for (var i = 0; i < l1.length; i++) {\n    res.features[0].geometry.coordinates[0][i] = l1[i].slice().reverse();\n  }\n\n  return res;\n};","map":{"version":3,"sources":["/home/rmehta/astrosat/Astrosat-Webapp/src/components/utils.js"],"names":["geoHammer","geoAitoff","geoMollweide","geoGraticule10","aitoffProj","hammerProj","mollweideProj","graticule","outline","type","getMwbackground","d","res","l1","features","geometry","coordinates","i","length","slice","reverse"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,YAA9B,QAAiD,mBAAjD;AACA,SAAQC,cAAR,QAA6B,IAA7B;AAEA,OAAO,MAAMC,UAAU,GAAGH,SAAS,EAA5B;AACP,OAAO,MAAMI,UAAU,GAAGL,SAAS,EAA5B;AACP,OAAO,MAAMM,aAAa,GAAGJ,YAAY,EAAlC;AAGP,OAAO,MAAMK,SAAS,GAAGJ,cAAc,EAAhC;AAEP,OAAO,MAAMK,OAAO,GAAI;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAjB;AAEP,OAAO,MAAMC,eAAe,GAAIC,CAAD,IAAO;AACpC;AACA,MAAIC,GAAG,GAAG;AAAC,YAAQ,mBAAT;AAA8B,gBAAY,CAAE;AAAC,cAAQ,SAAT;AAC1C,kBAAY;AAAE,gBAAQ,cAAV;AAA0B,uBAAgB;AAA1C;AAD8B,KAAF;AAA1C,GAAV,CAFoC,CAMpC;;AACA,MAAIC,EAAE,GAAGF,CAAC,CAACG,QAAF,CAAW,CAAX,EAAcC,QAAd,CAAuBC,WAAvB,CAAmC,CAAnC,CAAT;AACAJ,EAAAA,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,WAAzB,CAAqC,CAArC,IAA0C,EAA1C;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,EAAE,CAACK,MAAnB,EAA2BD,CAAC,EAA5B,EAAgC;AAC9BL,IAAAA,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,WAAzB,CAAqC,CAArC,EAAwCC,CAAxC,IAA6CJ,EAAE,CAACI,CAAD,CAAF,CAAME,KAAN,GAAcC,OAAd,EAA7C;AACD;;AAED,SAAOR,GAAP;AACD,CAdM","sourcesContent":["import {geoHammer, geoAitoff, geoMollweide} from \"d3-geo-projection\"\nimport {geoGraticule10} from \"d3\"\n\nexport const aitoffProj = geoAitoff()\nexport const hammerProj = geoHammer()\nexport const mollweideProj = geoMollweide()\n\n                    \nexport const graticule = geoGraticule10()\n\nexport const outline = ({type: \"Sphere\"})\n\nexport const getMwbackground = (d) => {\n  // geoJson object to darken the mw-outside, prevent greying of whole map in some orientations \n  var res = {'type': 'FeatureCollection', 'features': [ {'type': 'Feature', \n              'geometry': { 'type': 'MultiPolygon', 'coordinates' : [] }\n            }]};\n\n  // reverse the polygons, inside -> outside\n  var l1 = d.features[0].geometry.coordinates[0];\n  res.features[0].geometry.coordinates[0] = [];\n  for (var i=0; i<l1.length; i++) {\n    res.features[0].geometry.coordinates[0][i] = l1[i].slice().reverse();\n  }\n\n  return res;\n}"]},"metadata":{},"sourceType":"module"}